1. Install mongodb - 
windows: https://www.mongodb.com/docs/v7.0/tutorial/install-mongodb-on-windows-unattended/
macOS: https://www.mongodb.com/docs/v7.0/tutorial/install-mongodb-on-os-x/

3. Install mongoose - npm install mongoose




export const create = async (req, res) => {
  const { title, description } = req.body;

  const task = new Task({
    title,
    description,
    isCompleted: false,
  });

  try {
    const savedTask = await task.save();

    res.status(200).json({ ...savedTask._doc });
  } catch (error) {
    console.log("Error occurred will creating task: ", error);

    res
      .status(500)
      .json({ error: "An error occurred while creating the task." });
  }
};

export const getAll = async (_, res) => {
  return Task.find({ isDeleted: false })
    .sort({ createdOn: -1 })
    .then((response) => {
      const tasks = response.map((task) => {
        return {
          ...task._doc,
        };
      });

      res.status(200).json(tasks);
    });
};

export const remove = async (req, res) => {
  const id = req.params.id;

  try {
    await Task.updateOne({ _id: id }, { $set: { isDeleted: true } });

    res.status(200).json({ message: "Task deleted with id " + id });
  } catch (err) {
    console.log(err);
    res
      .status(500)
      .json({ error: "An error occurred while deleting the task." });
  }
};

export const update = async (req, res) => {
  const id = req.params.id;
  const { title, description } = req.body;

  try {
    await Task.updateOne({ _id: id }, { $set: { title, description } });

    res.status(200).json({ message: "Task updated with id " + id });
  } catch (err) {
    console.log(err);
    res
      .status(500)
      .json({ error: "An error occurred while deleting the task." });
  }
};
